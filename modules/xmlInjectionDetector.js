const axios = require('axios');
const fs = require('fs');
const xml2js = require('xml2js');

// Fonction pour détecter les vulnérabilités d'injection XML
async function detectXMLInjectionVulnerabilities(targetUrl, payload, outputFilePath) {
  try {
    // Envoyer une requête avec le payload XML potentiellement malveillant
    const response = await axios.post(targetUrl, payload, {
      headers: { 'Content-Type': 'application/xml' },
    });

    // Analyser la réponse XML
    const parser = new xml2js.Parser();
    parser.parseString(response.data, (err, result) => {
      if (err) {
        const report = `Tentative d'injection XML détectée : ${targetUrl}\n`;
        fs.appendFileSync(outputFilePath, report);
        console.log(report);
      }
    });

    console.log('Analyse des vulnérabilités d\'injection XML terminée.');
  } catch (error) {
    console.error('Erreur lors de la détection des vulnérabilités d\'injection XML :', error);
    const report = `Erreur lors de la détection des vulnérabilités d'injection XML : ${error}\n`;
    fs.appendFileSync(outputFilePath, report);
  }
}

module.exports = {
  detectXMLInjectionVulnerabilities,
};
