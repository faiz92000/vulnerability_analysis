const fs = require('fs');
const path = require('path');
const jsdom = require('jsdom');
const { JSDOM } = jsdom;
const axios = require('axios');

// Fonction pour détecter les vulnérabilités XSS
async function detectXSSVulnerabilities(url, outputFilePath) {
  try {
    const response = await axios.get(url);
    const html = response.data;

    const { window } = new JSDOM(html);
    const { document } = window;

    // Recherchez tous les éléments HTML susceptibles de contenir des scripts
    const scriptElements = document.querySelectorAll('script, input, textarea, div, etc.');

    const xssVulnerabilities = [];

    scriptElements.forEach((element) => {
      if (element.innerHTML.includes('<script>')) {
        xssVulnerabilities.push(`Possible vulnérabilité XSS détectée dans : ${element.tagName}`);
      }
    });

    if (xssVulnerabilities.length > 0) {
      console.log('Vulnérabilités XSS détectées :', url);
      const report = 'Vulnérabilités XSS détectées :\n';
      xssVulnerabilities.forEach((vuln) => {
        console.log(vuln);
        report += vuln + '\n';
      });

      fs.appendFileSync(outputFilePath, report);
    } else {
      console.log('Aucune vulnérabilité XSS détectée :', url);
    }
  } catch (error) {
    console.error('Erreur lors de la détection des vulnérabilités XSS :', error);
    const report = `Erreur lors de la détection des vulnérabilités XSS : ${error}\n`;
    fs.appendFileSync(outputFilePath, report);
  }
}

module.exports = {
  detectXSSVulnerabilities,
};
