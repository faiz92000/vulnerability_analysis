name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # Déclenche le pipeline lors d'un push sur la branche main
  pull_request:
    branches:
      - main  # Déclenche le pipeline lors d'une pull request vers la branche main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest  # Utilise une machine virtuelle Ubuntu

    steps:
      # Étape 1 : Checkout du code
      - name: Checkout code
        uses: actions/checkout@v3

      # Étape 2 : Configuration de Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'  # Version de Node.js à utiliser
          cache: 'npm'        # Active le cache npm pour accélérer les installations

      # Étape 3 : Installation des dépendances
      - name: Install dependencies
        run: npm install

      # Étape 4 : Linting avec ESLint
      - name: Run ESLint
        run: npx eslint .

      # Étape 5 : Build (si nécessaire)
      - name: Build project
        run: npm run build  # Remplacez par votre script de build si nécessaire

      # Étape 6 : Déploiement (exemple avec SSH et rsync)
      - name: Deploy to server
        if: github.ref == 'refs/heads/main'  # Déploie uniquement sur la branche main
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}  # Clé SSH privée
          REMOTE_HOST: ${{ secrets.REMOTE_HOST }}          # Adresse du serveur
          REMOTE_USER: ${{ secrets.REMOTE_USER }}          # Utilisateur SSH
          REMOTE_PATH: ${{ secrets.REMOTE_PATH }}          # Chemin de déploiement sur le serveur
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H $REMOTE_HOST >> ~/.ssh/known_hosts
          rsync -avz --delete ./ $REMOTE_USER@$REMOTE_HOST:$REMOTE_PATH
